#EVCPriceMinimiser
# $Id:$

# All electric energy prices expressed in [euro/kWh].


EVCDir = {f2:extData}evcwidrs/
# EVCPriceMinimiser Generated Directory
EVCGenDir={EVCPriceMinimiser:EVCDir}generated/

# EVCPriceMinimiser Input Directory
EVCInputDir={EVCPriceMinimiser:EVCDir}input/

#directory to create the power and price visualisers
electricStatDir={EVCPriceMinimiser:EVCGenDir}electricStatVisual/
pwrStatGnuFile={EVCPriceMinimiser:electricStatDir}pwrStat
priceStatDataFile={EVCPriceMinimiser:electricStatDir}priceStat.csv
gnuExt=.plt



#directory to generate the SOC visualiser 
battSocVisualDir={EVCPriceMinimiser:EVCGenDir}battSocVisual/
battSocRadix=bev
battSocExt=.plt


#SLP directory
SLPDir={EVCPriceMinimiser:EVCInputDir}SLP/
ZoneLoadFile={EVCPriceMinimiser:SLPDir}Zones.csv
GridsFile={EVCPriceMinimiser:SLPDir}Substations.csv



#energy price directory
EVCpriceenergyDir={EVCPriceMinimiser:EVCInputDir}priceEnergyDir/
basicPriceFileName={EVCPriceMinimiser:EVCpriceenergyDir}price01122013.csv
powerFileName={EVCPriceMinimiser:EVCpriceenergyDir}greenEng01122013.csv


#dynamic price directory - TODO{MU}Clean up 
dynamicEVCPriceDir={EVCPriceMinimiser:EVCGenDir}dynamicEVCPriceDir/

#dynamic price file name - TODO{MU}Clean up 
dynamicPriceFileNameRadix=dynamicPrice
#dynamic price file extension - TODO{MU}Clean up 
dynamicPriceFileNameExtension=.csv

#flag which controls the decision of creating the traveling moment array 
createTravelingMomentArray=false

#File containing the parking/driving moments indicator every 15 min (0: parking 1:driving)
travelingMomentsFileName={EVCPriceMinimiser:EVCGenDir}integration/travelingMomentsArray.txt

#File containg the array of distances traveled during whole day
travelDistancesFileName={EVCPriceMinimiser:EVCGenDir}travelDistancesArray.txt


#travelingIndicator can only be '1' or '0', All other values will generate assert error
travelingIndicator=1
parkingIndicator=0


#number of iterations to execute EVC-WIDRS
iterations=100

#boolean flag if charging strategy evolution to be written in the file
writeChEvolutionToFile=true

#EV related characteristics random or fixed
fixedParam=false
#Car category randomization or not
randomCategory=true

#a flag which is used to control available power limit for charging at any moment in time. 
# if this flag is false, cars can charge energy as much as possible at any time.
energyLimitCap=true

#utility to cost comparison file name 
utlitCostCompFile={EVCPriceMinimiser:EVCGenDir}utlitCostComp.csv

#a flag which controls the console output
consoleOut=true

